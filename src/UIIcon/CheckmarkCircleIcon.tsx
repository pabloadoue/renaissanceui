/**
    * checkmark-circle Definition
    **/
    import {Icon, useTheme} from "native-base";
    import {Path, G, Rect, Polygon} from "react-native-svg";
    //@ts-expect-error
    import find from "find-value";
    //@ts-expect-error
    import validator from "validator";

    export default function CheckmarkCircleIcon(props: any) {
      const {colors} = useTheme();
      let fillColor = colors.primary["500"];
  
      if (typeof props.color === "string") {
          const value = find(colors, props.color);
          if (value) {
              fillColor = value;
          } else if (validator.isHexColor(props.color)) {
              fillColor = props.color;
          }
      }
  
      return <Icon viewBox="0 0 128 88" {...props}>
          <G id="checkmark-circle" stroke="none" fill="none" strokeWidth="1" fillRule="evenodd"><Rect id="Rectangle" x="0" y="0" width="128" height="88"/><Path d="M64,80 C68.9176471,80 73.5470588,79.0588235 77.8882353,77.1764706 C82.2294118,75.2941176 86.0588235,72.6941176 89.3764706,69.3764706 C92.6941176,66.0588235 95.2941176,62.2294118 97.1764706,57.8882353 C99.0588235,53.5470588 100,48.9176471 100,44 C100,39.0823529 99.0588235,34.4529412 97.1764706,30.1117647 C95.2941176,25.7705882 92.6941176,21.9411765 89.3764706,18.6235294 C86.0588235,15.3058824 82.2235294,12.7058824 77.8705882,10.8235294 C73.5176471,8.94117647 68.8823529,8 63.9647059,8 C59.0470588,8 54.4176471,8.94117647 50.0764706,10.8235294 C45.7352941,12.7058824 41.9117647,15.3058824 38.6058824,18.6235294 C35.3,21.9411765 32.7058824,25.7705882 30.8235294,30.1117647 C28.9411765,34.4529412 28,39.0823529 28,44 C28,48.9176471 28.9411765,53.5470588 30.8235294,57.8882353 C32.7058824,62.2294118 35.3058824,66.0588235 38.6235294,69.3764706 C41.9411765,72.6941176 45.7705882,75.2941176 50.1117647,77.1764706 C54.4529412,79.0588235 59.0823529,80 64,80 Z M64,74 C59.8352941,74 55.9411765,73.2235294 52.3176471,71.6705882 C48.6941176,70.1176471 45.5117647,67.9705882 42.7705882,65.2294118 C40.0294118,62.4882353 37.8882353,59.3058824 36.3470588,55.6823529 C34.8058824,52.0588235 34.0352941,48.1647059 34.0352941,44 C34.0352941,39.8352941 34.8058824,35.9411765 36.3470588,32.3176471 C37.8882353,28.6941176 40.0235294,25.5058824 42.7529412,22.7529412 C45.4823529,20 48.6588235,17.8529412 52.2823529,16.3117647 C55.9058824,14.7705882 59.8,14 63.9647059,14 C68.1294118,14 72.0235294,14.7705882 75.6470588,16.3117647 C79.2705882,17.8529412 82.4588235,20 85.2117647,22.7529412 C87.9647059,25.5058824 90.1176471,28.6941176 91.6705882,32.3176471 C93.2235294,35.9411765 94,39.8352941 94,44 C94,48.1647059 93.2294118,52.0588235 91.6882353,55.6823529 C90.1470588,59.3058824 88.0058824,62.4882353 85.2647059,65.2294118 C82.5235294,67.9705882 79.3352941,70.1176471 75.7,71.6705882 C72.0647059,73.2235294 68.1647059,74 64,74 Z M60.1176471,60.7294118 C61.3176471,60.7294118 62.2705882,60.1882353 62.9764706,59.1058824 L79.1058824,33.6941176 C79.3176471,33.3647059 79.5117647,33.0058824 79.6882353,32.6176471 C79.8647059,32.2294118 79.9529412,31.8352941 79.9529412,31.4352941 C79.9529412,30.6588235 79.6588235,30.0352941 79.0705882,29.5647059 C78.4823529,29.0941176 77.8235294,28.8588235 77.0941176,28.8588235 C76.1058824,28.8588235 75.2823529,29.3882353 74.6235294,30.4470588 L59.9764706,53.9529412 L53.0235294,44.9529412 C52.6,44.3882353 52.1823529,44.0058824 51.7705882,43.8058824 C51.3588235,43.6058824 50.9058824,43.5058824 50.4117647,43.5058824 C49.6588235,43.5058824 49.0176471,43.7823529 48.4882353,44.3352941 C47.9588235,44.8882353 47.6941176,45.5529412 47.6941176,46.3294118 C47.6941176,47.0588235 47.9647059,47.7882353 48.5058824,48.5176471 L57.1176471,59.1058824 C57.5647059,59.6705882 58.0294118,60.0823529 58.5117647,60.3411765 C58.9941176,60.6 59.5294118,60.7294118 60.1176471,60.7294118 Z" id="Shape" fill={fillColor} fillRule="nonzero"/></G>
      </Icon>
  }